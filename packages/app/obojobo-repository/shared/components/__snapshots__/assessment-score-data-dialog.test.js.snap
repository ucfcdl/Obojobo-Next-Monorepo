// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AssessmentScoreDataDialog AssessmentScoreDataDialog renders correctly when history is loading 1`] = `
<div
  className="assessment-score-data-dialog"
>
  <div
    className="assessment-score-data-dialog--header"
  >
    <div
      className="repository--module-icon--image"
    >
      <img
        height="100%"
        src="/library/module-icon/mock-draft-id"
        width="100%"
      />
    </div>
    <div
      className="title"
    >
      mock-title
    </div>
    <button
      aria-label="Close dialog"
      className="repository--button close-button"
      onClick={[Function]}
    >
      ×
    </button>
  </div>
  <div
    className="assessment-score-data-dialog--body"
  >
    <div
      className="repository--assessment-stats"
    >
      <div
        className="settings"
      >
        <label
          className="view-mode"
        >
          <span>
            Showing:
          </span>
          <select
            onChange={[Function]}
            value="final-assessment-scores"
          >
            <option
              value="final-assessment-scores"
            >
              Final Assessment Scores
            </option>
            <option
              value="all-attempts"
            >
              All Attempt Scores
            </option>
          </select>
        </label>
        <hr />
        <div
          className="controls"
        >
          <div
            className="repository--assessment-stats-controls"
          >
            <div
              className="search-controls"
            >
              <div
                className="search-by-text"
              >
                <label
                  htmlFor="repository--assessment-stats-search-controls--search-by"
                >
                  Search by:
                   
                </label>
                <div
                  className="controls"
                >
                  <select
                    id="repository--assessment-stats-search-controls--search-by"
                    onChange={[Function]}
                  >
                    <option
                      value=""
                    >
                      Select one...
                    </option>
                    <option
                      value="course-title"
                    >
                      Course title
                    </option>
                    <option
                      value="resource-link-title"
                    >
                      Resource link title
                    </option>
                    <option
                      value="student-name"
                    >
                      Student name
                    </option>
                  </select>
                </div>
              </div>
              <hr />
              <div
                className="search-by-date"
              >
                <span
                  className="label"
                >
                  Filter attempts by date range:
                </span>
                <label>
                  <span>
                    From:
                  </span>
                  <div
                    className="date-range"
                  >
                    <input
                      min={null}
                      onChange={[Function]}
                      type="date"
                      value=""
                    />
                    <button
                      className="repository--button secondary-button"
                      disabled={true}
                      onClick={[Function]}
                    >
                      × Clear
                    </button>
                  </div>
                </label>
                <label>
                  <span>
                    To:
                  </span>
                  <div
                    className="date-range"
                  >
                    <input
                      max={null}
                      onChange={[Function]}
                      type="date"
                      value=""
                    />
                    <button
                      className="repository--button secondary-button"
                      disabled={true}
                      onClick={[Function]}
                    >
                      × Clear
                    </button>
                  </div>
                </label>
              </div>
            </div>
            <hr />
            <div
              className="filter-controls"
            >
              <label>
                <input
                  checked={false}
                  className="show-incomplete-attempts"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include incomplete attempt data
                </span>
              </label>
              <label>
                <input
                  checked={false}
                  className="show-preview-attempts"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include preview attempt data
                </span>
              </label>
              <hr />
              <label>
                <input
                  checked={false}
                  className="show-advanced-fields"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include advanced fields
                </span>
              </label>
            </div>
          </div>
        </div>
      </div>
      <div
        className="repository--data-grid-assessments"
      >
        <div
          className="repository--data-grid-scores"
        >
          <div
            className="data-grid"
          >
            <div
              className="react-data-table-component"
              columns={
                Array [
                  Object {
                    "advanced": false,
                    "name": "First Name",
                    "selector": "userFirstName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Last Name",
                    "selector": "userLastName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Course Title",
                    "selector": "courseTitle",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Resource Link Title",
                    "selector": "resourceLinkTitle",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "URL",
                    "selector": "launchPresentationReturnUrl",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Student Name",
                    "selector": "studentName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "Final Assessment Score",
                    "selector": "highestAssessmentScore",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "Preview Mode",
                    "selector": "isPreview",
                    "sortable": true,
                  },
                ]
              }
              data={Array []}
              dense={true}
              pagination={true}
              paginationComponentOptions={
                Object {
                  "noRowsPerPage": true,
                }
              }
              paginationPerPage={250}
              paginationRowsPerPageOptions={
                Array [
                  250,
                ]
              }
              striped={true}
              title={
                <div
                  className="data-table-header Final Assessment Scores"
                >
                  <p>
                    Final Assessment Scores
                  </p>
                </div>
              }
            >
              react-data-table-component
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`AssessmentScoreDataDialog AssessmentScoreDataDialog renders correctly when no attempt data 1`] = `
<div
  className="assessment-score-data-dialog"
>
  <div
    className="assessment-score-data-dialog--header"
  >
    <div
      className="repository--module-icon--image"
    >
      <img
        height="100%"
        src="/library/module-icon/mock-draft-id"
        width="100%"
      />
    </div>
    <div
      className="title"
    >
      mock-title
    </div>
    <button
      aria-label="Close dialog"
      className="repository--button close-button"
      onClick={[Function]}
    >
      ×
    </button>
  </div>
  <div
    className="assessment-score-data-dialog--body"
  >
    <div
      className="repository--assessment-stats"
    >
      <div
        className="settings"
      >
        <label
          className="view-mode"
        >
          <span>
            Showing:
          </span>
          <select
            onChange={[Function]}
            value="final-assessment-scores"
          >
            <option
              value="final-assessment-scores"
            >
              Final Assessment Scores
            </option>
            <option
              value="all-attempts"
            >
              All Attempt Scores
            </option>
          </select>
        </label>
        <hr />
        <div
          className="controls"
        >
          <div
            className="repository--assessment-stats-controls"
          >
            <div
              className="search-controls"
            >
              <div
                className="search-by-text"
              >
                <label
                  htmlFor="repository--assessment-stats-search-controls--search-by"
                >
                  Search by:
                   
                </label>
                <div
                  className="controls"
                >
                  <select
                    id="repository--assessment-stats-search-controls--search-by"
                    onChange={[Function]}
                  >
                    <option
                      value=""
                    >
                      Select one...
                    </option>
                    <option
                      value="course-title"
                    >
                      Course title
                    </option>
                    <option
                      value="resource-link-title"
                    >
                      Resource link title
                    </option>
                    <option
                      value="student-name"
                    >
                      Student name
                    </option>
                  </select>
                </div>
              </div>
              <hr />
              <div
                className="search-by-date"
              >
                <span
                  className="label"
                >
                  Filter attempts by date range:
                </span>
                <label>
                  <span>
                    From:
                  </span>
                  <div
                    className="date-range"
                  >
                    <input
                      min={null}
                      onChange={[Function]}
                      type="date"
                      value=""
                    />
                    <button
                      className="repository--button secondary-button"
                      disabled={true}
                      onClick={[Function]}
                    >
                      × Clear
                    </button>
                  </div>
                </label>
                <label>
                  <span>
                    To:
                  </span>
                  <div
                    className="date-range"
                  >
                    <input
                      max={null}
                      onChange={[Function]}
                      type="date"
                      value=""
                    />
                    <button
                      className="repository--button secondary-button"
                      disabled={true}
                      onClick={[Function]}
                    >
                      × Clear
                    </button>
                  </div>
                </label>
              </div>
            </div>
            <hr />
            <div
              className="filter-controls"
            >
              <label>
                <input
                  checked={false}
                  className="show-incomplete-attempts"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include incomplete attempt data
                </span>
              </label>
              <label>
                <input
                  checked={false}
                  className="show-preview-attempts"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include preview attempt data
                </span>
              </label>
              <hr />
              <label>
                <input
                  checked={false}
                  className="show-advanced-fields"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include advanced fields
                </span>
              </label>
            </div>
          </div>
        </div>
      </div>
      <div
        className="repository--data-grid-assessments"
      >
        <div
          className="repository--data-grid-scores"
        >
          <div
            className="data-grid"
          >
            <div
              className="react-data-table-component"
              columns={
                Array [
                  Object {
                    "advanced": false,
                    "name": "First Name",
                    "selector": "userFirstName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Last Name",
                    "selector": "userLastName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Course Title",
                    "selector": "courseTitle",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Resource Link Title",
                    "selector": "resourceLinkTitle",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "URL",
                    "selector": "launchPresentationReturnUrl",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Student Name",
                    "selector": "studentName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "Final Assessment Score",
                    "selector": "highestAssessmentScore",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "Preview Mode",
                    "selector": "isPreview",
                    "sortable": true,
                  },
                ]
              }
              data={Array []}
              dense={true}
              pagination={true}
              paginationComponentOptions={
                Object {
                  "noRowsPerPage": true,
                }
              }
              paginationPerPage={250}
              paginationRowsPerPageOptions={
                Array [
                  250,
                ]
              }
              striped={true}
              title={
                <div
                  className="data-table-header Final Assessment Scores"
                >
                  <p>
                    Final Assessment Scores
                  </p>
                </div>
              }
            >
              react-data-table-component
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`AssessmentScoreDataDialog AssessmentScoreDataDialog renders correctly with attempts 1`] = `
<div
  className="assessment-score-data-dialog"
>
  <div
    className="assessment-score-data-dialog--header"
  >
    <div
      className="repository--module-icon--image"
    >
      <img
        height="100%"
        src="/library/module-icon/mock-draft-id"
        width="100%"
      />
    </div>
    <div
      className="title"
    >
      mock-title
    </div>
    <button
      aria-label="Close dialog"
      className="repository--button close-button"
      onClick={[Function]}
    >
      ×
    </button>
  </div>
  <div
    className="assessment-score-data-dialog--body"
  >
    <div
      className="repository--assessment-stats"
    >
      <div
        className="settings"
      >
        <label
          className="view-mode"
        >
          <span>
            Showing:
          </span>
          <select
            onChange={[Function]}
            value="final-assessment-scores"
          >
            <option
              value="final-assessment-scores"
            >
              Final Assessment Scores
            </option>
            <option
              value="all-attempts"
            >
              All Attempt Scores
            </option>
          </select>
        </label>
        <hr />
        <div
          className="controls"
        >
          <div
            className="repository--assessment-stats-controls"
          >
            <div
              className="search-controls"
            >
              <div
                className="search-by-text"
              >
                <label
                  htmlFor="repository--assessment-stats-search-controls--search-by"
                >
                  Search by:
                   
                </label>
                <div
                  className="controls"
                >
                  <select
                    id="repository--assessment-stats-search-controls--search-by"
                    onChange={[Function]}
                  >
                    <option
                      value=""
                    >
                      Select one...
                    </option>
                    <option
                      value="course-title"
                    >
                      Course title
                    </option>
                    <option
                      value="resource-link-title"
                    >
                      Resource link title
                    </option>
                    <option
                      value="student-name"
                    >
                      Student name
                    </option>
                  </select>
                </div>
              </div>
              <hr />
              <div
                className="search-by-date"
              >
                <span
                  className="label"
                >
                  Filter attempts by date range:
                </span>
                <label>
                  <span>
                    From:
                  </span>
                  <div
                    className="date-range"
                  >
                    <input
                      min="NaN-NaN-NaN"
                      onChange={[Function]}
                      type="date"
                      value=""
                    />
                    <button
                      className="repository--button secondary-button"
                      disabled={true}
                      onClick={[Function]}
                    >
                      × Clear
                    </button>
                  </div>
                </label>
                <label>
                  <span>
                    To:
                  </span>
                  <div
                    className="date-range"
                  >
                    <input
                      max="NaN-NaN-NaN"
                      onChange={[Function]}
                      type="date"
                      value=""
                    />
                    <button
                      className="repository--button secondary-button"
                      disabled={true}
                      onClick={[Function]}
                    >
                      × Clear
                    </button>
                  </div>
                </label>
              </div>
            </div>
            <hr />
            <div
              className="filter-controls"
            >
              <label>
                <input
                  checked={false}
                  className="show-incomplete-attempts"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include incomplete attempt data
                </span>
              </label>
              <label>
                <input
                  checked={false}
                  className="show-preview-attempts"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include preview attempt data
                </span>
              </label>
              <hr />
              <label>
                <input
                  checked={false}
                  className="show-advanced-fields"
                  onChange={[Function]}
                  type="checkbox"
                />
                <span>
                  Include advanced fields
                </span>
              </label>
            </div>
          </div>
        </div>
      </div>
      <div
        className="repository--data-grid-assessments"
      >
        <div
          className="repository--data-grid-scores"
        >
          <div
            className="data-grid"
          >
            <div
              className="react-data-table-component"
              columns={
                Array [
                  Object {
                    "advanced": false,
                    "name": "First Name",
                    "selector": "userFirstName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Last Name",
                    "selector": "userLastName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Course Title",
                    "selector": "courseTitle",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Resource Link Title",
                    "selector": "resourceLinkTitle",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "URL",
                    "selector": "launchPresentationReturnUrl",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "name": "Student Name",
                    "selector": "studentName",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "Final Assessment Score",
                    "selector": "highestAssessmentScore",
                    "sortable": true,
                  },
                  Object {
                    "advanced": false,
                    "cell": [Function],
                    "name": "Preview Mode",
                    "selector": "isPreview",
                    "sortable": true,
                  },
                ]
              }
              data={Array []}
              dense={true}
              pagination={true}
              paginationComponentOptions={
                Object {
                  "noRowsPerPage": true,
                }
              }
              paginationPerPage={250}
              paginationRowsPerPageOptions={
                Array [
                  250,
                ]
              }
              striped={true}
              title={
                <div
                  className="data-table-header Final Assessment Scores"
                >
                  <p>
                    Final Assessment Scores
                  </p>
                </div>
              }
            >
              react-data-table-component
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
